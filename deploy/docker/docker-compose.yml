version: '3.8'

services:
  # Service组件
  service:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile.service
    container_name: log-monitor-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - service_data:/opt/log-monitor/data
      - service_logs:/opt/log-monitor/logs
      - ./config/application.yml:/opt/log-monitor/config/application.yml:ro
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SERVICE_PORT=8081
      - DATABASE_PATH=/opt/log-monitor/data/service.db
    networks:
      - log-monitor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Agent组件
  agent:
    build:
      context: ../../agent
      dockerfile: ../deploy/docker/Dockerfile.agent
    container_name: log-monitor-agent
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - agent_data:/opt/log-monitor/agent/data
      - agent_logs:/opt/log-monitor/agent/logs
      - ./config/agent.toml:/opt/log-monitor/agent/config/agent.toml:ro
      # 挂载需要监控的日志目录
      - /var/log:/var/log:ro
      - ./test-logs:/opt/log-monitor/test-logs:ro
    networks:
      - log-monitor-network
    depends_on:
      - service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend组件
  frontend:
    build:
      context: ../../front
      dockerfile: ../deploy/docker/Dockerfile.frontend
    container_name: log-monitor-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/log-monitor.conf:/etc/nginx/conf.d/default.conf:ro
      # SSL证书（可选）
      # - ./ssl:/etc/nginx/ssl:ro
    networks:
      - log-monitor-network
    depends_on:
      - service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx反向代理（可选，如果frontend使用独立的Nginx）
  nginx:
    image: nginx:alpine
    container_name: log-monitor-nginx
    restart: unless-stopped
    ports:
      - "8090:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/log-monitor.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - log-monitor-network
    depends_on:
      - service
      - frontend
    profiles:
      - nginx-proxy

volumes:
  service_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/service
  service_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/service
  agent_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/agent
  agent_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/agent
  nginx_logs:
    driver: local

networks:
  log-monitor-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 